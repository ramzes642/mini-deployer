on:
  release:
    types: [created]
  push:
    tags:
      - '*'

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, windows/386, windows/amd64, darwin/amd64
        goos: [linux]
        goarch: ["386", amd64, arm64, arm]
    steps:
      - 
        uses: actions/checkout@v3
        name: GoReleaser Action
        with:
          fetch-depth: 0
      -
        name: Set up Go
        uses: actions/setup-go@v3
      - 
        uses: goreleaser/goreleaser-action@v4.2.0
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       - uses: wangyoucao577/go-release-action@v1.20
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           goos: ${{ matrix.goos }}
#           goarch: ${{ matrix.goarch }}
#           binary_name: "mini-deployer"
#           goversion: "https://dl.google.com/go/go1.20.1.linux-amd64.tar.gz"
#           extra_files: deployer.service config.sample.json

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push Docker images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8
        uses: docker/build-push-action@v3.0.0
        with:
          file: "Dockerfile"
          push: true
          tags: "ghcr.io/${{ github.repository }}:latest"
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository }}:buildcache,mode=max
